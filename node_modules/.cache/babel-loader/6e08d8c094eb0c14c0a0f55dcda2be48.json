{"ast":null,"code":"var _jsxFileName = \"/Users/saket/contactmanager/src/components/layout/TextInputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, label, \": \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: type,\n    name: name,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, error));\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;","map":{"version":3,"sources":["/Users/saket/contactmanager/src/components/layout/TextInputGroup.js"],"names":["React","PropTypes","classnames","TextInputGroup","label","name","value","placeholder","type","onChange","error","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,IAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA,IALoB;AAMpBC,EAAAA,QANoB;AAOpBC,EAAAA;AAPoB,CAAD,KAQjB;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBN,KAAvB,OADJ,eAEI;AACI,IAAA,IAAI,EAAEI,IADV;AAEI,IAAA,IAAI,EAAEH,IAFV;AAGI,IAAA,SAAS,EAAEH,UAAU,CAAC,8BAAD,EAAiC;AAClD,oBAAcQ;AADoC,KAAjC,CAHzB;AAMI,IAAA,WAAW,EAAEH,WANjB;AAOI,IAAA,KAAK,EAAED,KAPX;AAQI,IAAA,QAAQ,EAAEG,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAYKC,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAZd,CADJ;AAgBH,CAzBD;;AA2BAP,cAAc,CAACQ,SAAf,GAA2B;AACvBN,EAAAA,IAAI,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADA;AAEvBN,EAAAA,WAAW,EAAEN,SAAS,CAACW,MAFA;AAGvBN,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAHD;AAIvBL,EAAAA,IAAI,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAJA;AAKvBJ,EAAAA,QAAQ,EAAER,SAAS,CAACa,IAAV,CAAeD;AALF,CAA3B;AAQAV,cAAc,CAACY,YAAf,GAA8B;AAC1BP,EAAAA,IAAI,EAAE;AADoB,CAA9B;AAIA,eAAeL,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"name\">{label}: </label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;"]},"metadata":{},"sourceType":"module"}